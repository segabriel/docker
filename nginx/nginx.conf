# nginx configuration file

user						nginx;	#run as a less privileged user for security reasons
daemon						off;	#process needs to run in foreground within container

# How many worker threads to run;
# "auto" sets it to the number of CPU cores available in the system, and offers the best performance.
# Don't set it higher than the number of CPU cores if changing this parameter.
# The maximum number of connections for nginx is calculated by: max_clients = worker_processes * worker_connections
worker_processes			auto;
worker_rlimit_nofile		8192;	#maximum open file descriptors per process (should be > worker_connections)

events {
	## When you need > 8000 * cpu_cores connections, you start optimizing your OS,
	## and this is probably the point at which you hire people who are smarter than you, as this is a lot of requests.
	worker_connections			1024;
	multi_accept				on;
	use							epoll;
}

error_log					/var/log/nginx/error.log warn;
error_log					/dev/stderr warn;	#duplicate the error log into docker logs

pid							/var/run/nginx.pid;

http {
	server_tokens				off;

	keepalive_timeout 			20;
	sendfile        			on;
	tcp_nopush      			on;
	tcp_nodelay     			off;
    types_hash_max_size			2048;

    open_file_cache				max=5000 inactive=20s;
    open_file_cache_valid		30s;
    open_file_cache_min_uses	2;
    open_file_cache_errors		on;

	include						sites-enabled/*;
	include						/etc/nginx/mime.types;
	default_type				application/octet-stream;

	log_format	main			'$remote_addr - $remote_user [$time_local] "$request" '
					  			'$status $body_bytes_sent "$http_referer" '
					  			'"$http_user_agent" "$http_x_forwarded_for"';
	access_log  				/var/log/nginx/access.log main;
	#access_log  				/dev/stdout main;	#duplicate the access log into docker logs

	# Compression
	gzip 						on;
    gzip_http_version 			1.1;
    gzip_comp_level 			5;
    gzip_static     			on;
    gzip_min_length 			1024;
    gzip_proxied     			any;
    gzip_vary       			on;
    gzip_types					text/plain text/xml text/css
								text/x-component text/x-js
								text/javascript
    							application/json
    							application/xml
    							application/xml+rss
    							application/atom+xml
    							application/javascript
    							application/x-javascript
    							application/xhtml+xml;

	# SSL (https://mozilla.github.io/server-side-tls/ssl-config-generator/)

	proxy_set_header			Host $http_host;
	proxy_set_header			X-Real-IP $remote_addr;
	proxy_set_header			X-Forward-For $proxy_add_x_forwarded_for;
	proxy_set_header			X-Forwarded-Host $http_host;

    upstream tomcat {
        server						172.17.0.1:8090;
    }

    server {
		listen						80 default;
		server_name					tomcat.dev;

		location / {
		    proxy_pass					http://tomcat;
		    proxy_http_version			1.1;
		    proxy_send_timeout			60s;
		    proxy_read_timeout			60s;
			proxy_connect_timeout		5s;
			proxy_redirect				off;
		    proxy_pass_request_headers	on;
		    proxy_pass_request_body		on;
		    proxy_request_buffering		on;
		    proxy_intercept_errors		off;

		    client_body_buffer_size		256k;
		    client_max_body_size		5m;

			allow						all;
			#allow						xxx.xxx.xxx.xxx;
			#deny						all;
		}

		location /html/ {
			root						/usr/share/nginx;

			proxy_intercept_errors		on;
		}
	}
}
